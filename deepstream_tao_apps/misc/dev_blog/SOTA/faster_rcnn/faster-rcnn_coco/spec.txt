################################################################################
# The MIT License (MIT)
#
# Copyright (c) 2019-2021 NVIDIA CORPORATION
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

random_seed: 42
enc_key: 'tao'
verbose: True
model_config {
input_image_config {
image_type: RGB
image_channel_order: 'bgr'
size_min {
min: 600
}
    image_channel_mean {
        key: 'b'
        value: 103.939
}
    image_channel_mean {
        key: 'g'
        value: 116.779
}
    image_channel_mean {
        key: 'r'
        value: 123.68
}
image_scaling_factor: 1.0
max_objects_num_per_image: 100
}
arch: "resnet:101"
anchor_box_config {
scale: 32.0
scale: 128.0
scale: 256.0
scale: 512.0
ratio: 1.0
ratio: 0.5
ratio: 2.0
}
freeze_bn: True
freeze_blocks: 1
freeze_blocks: 2
roi_mini_batch: 256
rpn_stride: 16
use_bias: False
roi_pooling_config {
pool_size: 7
pool_size_2x: True
}
all_projections: False
use_pooling:True
}
dataset_config {
  data_sources: {
    tfrecords_path: "/workspace/tao-experiments/data/coco2014/tfrecords/train2014/*"
    image_directory_path: "/workspace/tao-experiments/data/coco2014"
  }
image_extension: 'jpg'
 target_class_mapping {
    key: "person"
    value: "person"
  }
  target_class_mapping {
    key: "car"
    value: "car"
  }
  target_class_mapping {
    key: "chair"
    value: "chair"
  }
  target_class_mapping {
    key: "book"
    value: "book"
  }
  target_class_mapping {
    key: "bottle"
    value: "bottle"
  }
  target_class_mapping {
    key: "cup"
    value: "cup"
  }
  target_class_mapping {
    key: "diningtable"
    value: "diningtable"
  }
  target_class_mapping {
    key: "bowl"
    value: "bowl"
  }
  target_class_mapping {
    key: "trafficlight"
    value: "trafficlight"
  }
  target_class_mapping {
    key: "handbag"
    value: "handbag"
  }
  target_class_mapping {
    key: "umbrella"
    value: "umbrella"
  }
  target_class_mapping {
    key: "boat"
    value: "boat"
  }
  target_class_mapping {
    key: "bird"
    value: "bird"
  }
  target_class_mapping {
    key: "truck"
    value: "truck"
  }
  target_class_mapping {
    key: "banana"
    value: "banana"
  }
  target_class_mapping {
    key: "bench"
    value: "bench"
  }
  target_class_mapping {
    key: "sheep"
    value: "sheep"
  }
  target_class_mapping {
    key: "kite"
    value: "kite"
  }
  target_class_mapping {
    key: "backpack"
    value: "backpack"
  }
  target_class_mapping {
    key: "motorcycle"
    value: "motorcycle"
  }
  target_class_mapping {
    key: "pottedplant"
    value: "pottedplant"
  }
  target_class_mapping {
    key: "wineglass"
    value: "wineglass"
  }
  target_class_mapping {
    key: "knife"
    value: "knife"
  }
  target_class_mapping {
    key: "carrot"
    value: "carrot"
  }
  target_class_mapping {
    key: "cow"
    value: "cow"
  }
  target_class_mapping {
    key: "broccoli"
    value: "broccoli"
  }
  target_class_mapping {
    key: "bicycle"
    value: "bicycle"
  }
  target_class_mapping {
    key: "donut"
    value: "donut"
  }
  target_class_mapping {
    key: "horse"
    value: "horse"
  }
  target_class_mapping {
    key: "skis"
    value: "skis"
  }
  target_class_mapping {
    key: "vase"
    value: "vase"
  }
  target_class_mapping {
    key: "cake"
    value: "cake"
  }
  target_class_mapping {
    key: "orange"
    value: "orange"
  }
  target_class_mapping {
    key: "cellphone"
    value: "cellphone"
  }
  target_class_mapping {
    key: "sportsball"
    value: "sportsball"
  }
  target_class_mapping {
    key: "tie"
    value: "tie"
  }
  target_class_mapping {
    key: "apple"
    value: "apple"
  }
  target_class_mapping {
    key: "bus"
    value: "bus"
  }
  target_class_mapping {
    key: "spoon"
    value: "spoon"
  }
  target_class_mapping {
    key: "suitcase"
    value: "suitcase"
  }
  target_class_mapping {
    key: "clock"
    value: "clock"
  }
  target_class_mapping {
    key: "surfboard"
    value: "surfboard"
  }
  target_class_mapping {
    key: "couch"
    value: "couch"
  }
  target_class_mapping {
    key: "remote"
    value: "remote"
  }
  target_class_mapping {
    key: "skateboard"
    value: "skateboard"
  }
  target_class_mapping {
    key: "tv"
    value: "tv"
  }
  target_class_mapping {
    key: "pizza"
    value: "pizza"
  }
  target_class_mapping {
    key: "sink"
    value: "sink"
  }
  target_class_mapping {
    key: "elephant"
    value: "elephant"
  }
  target_class_mapping {
    key: "fork"
    value: "fork"
  }
  target_class_mapping {
    key: "airplane"
    value: "airplane"
  }
  target_class_mapping {
    key: "dog"
    value: "dog"
  }
  target_class_mapping {
    key: "giraffe"
    value: "giraffe"
  }
  target_class_mapping {
    key: "zebra"
    value: "zebra"
  }
  target_class_mapping {
    key: "teddybear"
    value: "teddybear"
  }
  target_class_mapping {
    key: "tennisracket"
    value: "tennisracket"
  }
  target_class_mapping {
    key: "laptop"
    value: "laptop"
  }
  target_class_mapping {
    key: "cat"
    value: "cat"
  }
  target_class_mapping {
    key: "sandwich"
    value: "sandwich"
  }
  target_class_mapping {
    key: "train"
    value: "train"
  }
  target_class_mapping {
    key: "toilet"
    value: "toilet"
  }
  target_class_mapping {
    key: "bed"
    value: "bed"
  }
  target_class_mapping {
    key: "baseballglove"
    value: "baseballglove"
  }
  target_class_mapping {
    key: "baseballbat"
    value: "baseballbat"
  }
  target_class_mapping {
    key: "oven"
    value: "oven"
  }
  target_class_mapping {
    key: "hotdog"
    value: "hotdog"
  }
  target_class_mapping {
    key: "keyboard"
    value: "keyboard"
  }
  target_class_mapping {
    key: "snowboard"
    value: "snowboard"
  }
  target_class_mapping {
    key: "refrigerator"
    value: "refrigerator"
  }
  target_class_mapping {
    key: "frisbee"
    value: "frisbee"
  }
  target_class_mapping {
    key: "mouse"
    value: "mouse"
  }
  target_class_mapping {
    key: "stopsign"
    value: "stopsign"
  }
  target_class_mapping {
    key: "firehydrant"
    value: "firehydrant"
  }
  target_class_mapping {
    key: "toothbrush"
    value: "toothbrush"
  }
  target_class_mapping {
    key: "microwave"
    value: "microwave"
  }
  target_class_mapping {
    key: "scissors"
    value: "scissors"
  }
  target_class_mapping {
    key: "bear"
    value: "bear"
  }
  target_class_mapping {
    key: "parkingmeter"
    value: "parkingmeter"
  }
  target_class_mapping {
    key: "toaster"
    value: "toaster"
  }
  target_class_mapping {
    key: "hairdrier"
    value: "hairdrier"
  }
validation_data_source: {
    tfrecords_path: "/workspace/tao-experiments/data/coco2014/tfrecords/val2014/*"
    image_directory_path: "/workspace/tao-experiments/data/coco2014"
}
}
augmentation_config {
preprocessing {
output_image_channel: 3
output_image_min: 600
output_image_max: 1000
min_bbox_width: 1.0
min_bbox_height: 1.0
}
spatial_augmentation {
hflip_probability: 0.5
vflip_probability: 0.0
zoom_min: 1.0
zoom_max: 1.0
translate_max_x: 0
translate_max_y: 0
}
color_augmentation {
hue_rotation_max: 0.0
saturation_shift_max: 0.0
contrast_scale_max: 0.0
contrast_center: 0.5
}
}
training_config {
enable_augmentation: True
enable_qat: False
batch_size_per_gpu: 1
num_epochs: 20
pretrained_weights: "/workspace/tao-experiments/classification/resnet101/weights/resnet_150.tlt"
output_model: "/workspace/tao-experiments/coco2014/frcnn_resnet101.tlt"
rpn_min_overlap: 0.3
rpn_max_overlap: 0.7
classifier_min_overlap: 0.0
classifier_max_overlap: 0.5
gt_as_roi: False
std_scaling: 1.0
classifier_regr_std {
key: 'x'
value: 10.0
}
classifier_regr_std {
key: 'y'
value: 10.0
}
classifier_regr_std {
key: 'w'
value: 5.0
}
classifier_regr_std {
key: 'h'
value: 5.0
}

rpn_mini_batch: 256
rpn_pre_nms_top_N: 12000
rpn_nms_max_boxes: 2000
rpn_nms_overlap_threshold: 0.7

regularizer {
type: L2
weight: 1e-4
}

optimizer {
adam {
lr: 0.00001
beta_1: 0.9
beta_2: 0.999
decay: 0.0
}
}

learning_rate {
step {
base_lr: 0.00001
gamma: 0.1
step_size: 70
}
}

lambda_rpn_regr: 1.0
lambda_rpn_class: 1.0
lambda_cls_regr: 1.0
lambda_cls_class: 1.0
}
inference_config {
images_dir: '/workspace/tao-experiments/data/coco2014/images/val2014'
model: '/workspace/tao-experiments/coco2014/frcnn_resnet101.epoch20.tlt'
batch_size: 1
detection_image_output_dir: '/workspace/tao-experiments/coco2014/inference_results_imgs'
labels_dump_dir: '/workspace/tao-experiments/coco2014/inference_dump_labels'
rpn_pre_nms_top_N: 6000
rpn_nms_max_boxes: 300
rpn_nms_overlap_threshold: 0.7
object_confidence_thres: 0.0001
bbox_visualize_threshold: 0.6
classifier_nms_max_boxes: 100
classifier_nms_overlap_threshold: 0.3
}

evaluation_config {
model: '/workspace/tao-experiments/coco2014/frcnn_resnet101.epoch20.tlt'
batch_size: 1
validation_period_during_training: 1
rpn_pre_nms_top_N: 6000
rpn_nms_max_boxes: 300
rpn_nms_overlap_threshold: 0.7
classifier_nms_max_boxes: 100
classifier_nms_overlap_threshold: 0.5
object_confidence_thres: 0.0001
use_voc07_11point_metric: False
gt_matching_iou_threshold_range {
start: 0.5
end: 1.0
step: 0.05
}
}

